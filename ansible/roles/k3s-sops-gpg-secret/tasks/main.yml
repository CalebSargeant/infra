# brew install gpg
# export GPG_TTY=$(tty)
# gpg --full-generate-key (rsa/rsa 4096)
# sops --encrypt --pgp "D9B513707705B08EAB4D4071A663ED74C5A7646E" --encrypted-regex '^(data)$ cloudflare-secret.yaml > cloudflare-secret-enc.yaml
# sops --decrypt cloudflare-secret.enc.yaml
# gpg --export-secret-keys --armor caleb@sargeant.co | base64
# gpg --list-keys
# gpg --list-secret-keys

#- name: Apply Kubernetes Secret
#  command: kubectl apply -f templates/sops-gpg-secret.yaml
#  delegate_to: localhost
#  become: false

#- name: Create a Deployment by reading the definition from a local file
#  kubernetes.core.k8s:
#    state: present
#    src: templates/sops-gpg-secret.yaml

#- name: Create SOPS GPG secret
#  hosts: localhost
#  tasks:
#- name: Grab the GPG key
#  command: cat {{ gpg_key_path }}/pgp.asc
#  register: gpg_key
#  changed_when: false
#  become: false
#  delegate_to: localhost

#- name: Copy GPG key to server
#  copy:
#    content: "{{ gpg_key.stdout }}"
#    dest: /tmp/pgp.asc

- name: Base64 encode GPG key
  shell: base64 -w 0 -i {{ gpg_key_path }}/pgp.asc
  register: base64_key
  changed_when: false
  become: false
  delegate_to: localhost

- name: Create Kubernetes Secret manifest
  copy:
    dest: /tmp/sops-gpg-secret.yaml
    content: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: sops-gpg
        namespace: flux-system
      type: Opaque
      data:
        gpgkey: "{{ base64_key.stdout }}"

- name: Apply Kubernetes Secret
  command: kubectl apply -f /tmp/sops-gpg-secret.yaml