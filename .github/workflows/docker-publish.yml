name: Build and Push Multi-Arch Images to GHCR

on:
  push:
    branches:
      - main
    tags:
      - "n8n-v*"
      - "openfortivpn-v*"
  pull_request:
    paths:
      - "dockerfiles/n8n/**"
      - "dockerfiles/openfortivpn/**"

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      build_n8n: ${{ steps.filter.outputs.n8n }}
      build_openfortivpn: ${{ steps.filter.outputs.openfortivpn }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Check changes
        id: filter
        uses: dorny/paths-filter@v3.0.2
        with:
          filters: |
            n8n:
              - 'dockerfiles/n8n/**'
            openfortivpn:
              - 'dockerfiles/openfortivpn/**'

  build:
    needs: determine-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - { name: "n8n", path: "dockerfiles/n8n", tag_prefix: "n8n-v", registry_name: "n8n" }
          - { name: "openfortivpn", path: "dockerfiles/openfortivpn", tag_prefix: "openfortivpn-v", registry_name: "openfortivpn" }

    steps:
      - name: Determine if Build is Needed
        id: check_build
        run: |
          TAG_REF="${{ github.ref }}"
          TAG_PREFIX="${{ matrix.image.tag_prefix }}"
          CHANGED="${{ needs.determine-changes.outputs[format('build_{0}', matrix.image.name)] == 'true' }}"
          if [[ "$TAG_REF" == refs/tags/$TAG_PREFIX* || "$CHANGED" == "true" ]]; then
            echo "BUILD_NEEDED=true" >> $GITHUB_ENV
          else
            echo "BUILD_NEEDED=false" >> $GITHUB_ENV
          fi

      - name: Skip Build If Not Needed
        if: env.BUILD_NEEDED == 'false'
        run: echo "Skipping build because there are no relevant changes."

      - name: Checkout repository
        if: env.BUILD_NEEDED == 'true'
        uses: actions/checkout@v4

      - name: Set up QEMU (for ARM emulation)
        if: env.BUILD_NEEDED == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: env.BUILD_NEEDED == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: env.BUILD_NEEDED == 'true'
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: echo "$GHCR_TOKEN" | docker login ghcr.io -u "CalebSargeant" --password-stdin

      - name: Determine Image Tag
        if: env.BUILD_NEEDED == 'true'
        id: vars
        run: |
          if [[ "$TAG_REF" == refs/tags/$TAG_PREFIX* ]]; then
            VERSION="${TAG_REF#refs/tags/$TAG_PREFIX}"
          else
            VERSION="latest"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "IMAGE_TAG=ghcr.io/calebsargeant/${{ matrix.image.registry_name }}:$VERSION" >> $GITHUB_ENV

      - name: Build and Push Image
        if: env.BUILD_NEEDED == 'true'
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $IMAGE_TAG \
            --push ${{ matrix.image.path }}