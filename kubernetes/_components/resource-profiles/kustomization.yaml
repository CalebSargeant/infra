apiVersion: kustomize.config.k8s.io/v1alpha1
kind: Component

patches:
  # P-type (Processing Intensive) - CPU intensive, 2:1 ratio
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 100m, memory: 64Mi }, limits: { cpu: 250m, memory: 128Mi } }
    target:
      labelSelector: "resource-profile=p.pico"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 200m, memory: 128Mi }, limits: { cpu: 500m, memory: 256Mi } }
    target:
      labelSelector: "resource-profile=p.nano"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 300m, memory: 192Mi }, limits: { cpu: 1, memory: 512Mi } }
    target:
      labelSelector: "resource-profile=p.micro"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 500m, memory: 256Mi }, limits: { cpu: 2, memory: 1Gi } }
    target:
      labelSelector: "resource-profile=p.small"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 1, memory: 512Mi }, limits: { cpu: 4, memory: 2Gi } }
    target:
      labelSelector: "resource-profile=p.medium"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 2, memory: 1Gi }, limits: { cpu: 8, memory: 4Gi } }
    target:
      labelSelector: "resource-profile=p.large"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 4, memory: 2Gi }, limits: { cpu: 16, memory: 8Gi } }
    target:
      labelSelector: "resource-profile=p.xlarge"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 8, memory: 4Gi }, limits: { cpu: 32, memory: 16Gi } }
    target:
      labelSelector: "resource-profile=p.2xlarge"


  # T-type (Burstable) - Balanced CPU/Memory ratio 1:1
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 25m, memory: 32Mi }, limits: { cpu: 100m, memory: 128Mi } }
    target:
      labelSelector: "resource-profile=t.pico"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 50m, memory: 64Mi }, limits: { cpu: 200m, memory: 256Mi } }
    target:
      labelSelector: "resource-profile=t.nano"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 100m, memory: 128Mi }, limits: { cpu: 500m, memory: 512Mi } }
    target:
      labelSelector: "resource-profile=t.micro"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 250m, memory: 256Mi }, limits: { cpu: 1, memory: 1Gi } }
    target:
      labelSelector: "resource-profile=t.small"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 500m, memory: 512Mi }, limits: { cpu: 2, memory: 2Gi } }
    target:
      labelSelector: "resource-profile=t.medium"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 1, memory: 1Gi }, limits: { cpu: 4, memory: 4Gi } }
    target:
      labelSelector: "resource-profile=t.large"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 2, memory: 2Gi }, limits: { cpu: 8, memory: 8Gi } }
    target:
      labelSelector: "resource-profile=t.xlarge"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 4, memory: 4Gi }, limits: { cpu: 16, memory: 16Gi } }
    target:
      labelSelector: "resource-profile=t.2xlarge"


  # C-type (Compute Optimized) - CPU heavy, 1:2 ratio
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 100m, memory: 256Mi }, limits: { cpu: 250m, memory: 512Mi } }
    target:
      labelSelector: "resource-profile=c.pico"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 150m, memory: 384Mi }, limits: { cpu: 500m, memory: 1Gi } }
    target:
      labelSelector: "resource-profile=c.nano"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 200m, memory: 512Mi }, limits: { cpu: 750m, memory: 1536Mi } }
    target:
      labelSelector: "resource-profile=c.micro"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 250m, memory: 512Mi }, limits: { cpu: 1, memory: 2Gi } }
    target:
      labelSelector: "resource-profile=c.small"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 500m, memory: 1Gi }, limits: { cpu: 2, memory: 4Gi } }
    target:
      labelSelector: "resource-profile=c.medium"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 1, memory: 2Gi }, limits: { cpu: 4, memory: 8Gi } }
    target:
      labelSelector: "resource-profile=c.large"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 2, memory: 4Gi }, limits: { cpu: 8, memory: 16Gi } }
    target:
      labelSelector: "resource-profile=c.xlarge"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 4, memory: 8Gi }, limits: { cpu: 16, memory: 32Gi } }
    target:
      labelSelector: "resource-profile=c.2xlarge"


  # M-type (Memory Optimized) - Memory heavy, 1:4 ratio  
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 100m, memory: 512Mi }, limits: { cpu: 250m, memory: 1Gi } }
    target:
      labelSelector: "resource-profile=m.pico"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 150m, memory: 768Mi }, limits: { cpu: 500m, memory: 2Gi } }
    target:
      labelSelector: "resource-profile=m.nano"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 200m, memory: 1Gi }, limits: { cpu: 750m, memory: 3Gi } }
    target:
      labelSelector: "resource-profile=m.micro"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 250m, memory: 1Gi }, limits: { cpu: 1, memory: 4Gi } }
    target:
      labelSelector: "resource-profile=m.small"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 500m, memory: 2Gi }, limits: { cpu: 2, memory: 8Gi } }
    target:
      labelSelector: "resource-profile=m.medium"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 1, memory: 4Gi }, limits: { cpu: 4, memory: 16Gi } }
    target:
      labelSelector: "resource-profile=m.large"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 2, memory: 8Gi }, limits: { cpu: 8, memory: 32Gi } }
    target:
      labelSelector: "resource-profile=m.xlarge"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 4, memory: 16Gi }, limits: { cpu: 16, memory: 64Gi } }
    target:
      labelSelector: "resource-profile=m.2xlarge"


  # R-type (Memory Intensive) - Very memory heavy, 1:8 ratio
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 100m, memory: 1Gi }, limits: { cpu: 250m, memory: 2Gi } }
    target:
      labelSelector: "resource-profile=r.pico"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 150m, memory: 1536Mi }, limits: { cpu: 500m, memory: 4Gi } }
    target:
      labelSelector: "resource-profile=r.nano"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 200m, memory: 2Gi }, limits: { cpu: 750m, memory: 6Gi } }
    target:
      labelSelector: "resource-profile=r.micro"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 250m, memory: 2Gi }, limits: { cpu: 1, memory: 8Gi } }
    target:
      labelSelector: "resource-profile=r.small"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 500m, memory: 4Gi }, limits: { cpu: 2, memory: 16Gi } }
    target:
      labelSelector: "resource-profile=r.medium"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 1, memory: 8Gi }, limits: { cpu: 4, memory: 32Gi } }
    target:
      labelSelector: "resource-profile=r.large"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 2, memory: 16Gi }, limits: { cpu: 8, memory: 64Gi } }
    target:
      labelSelector: "resource-profile=r.xlarge"
  - patch: |
      - op: add
        path: /spec/template/spec/containers/0/resources
        value: { requests: { cpu: 4, memory: 32Gi }, limits: { cpu: 16, memory: 128Gi } }
    target:
      labelSelector: "resource-profile=r.2xlarge"