locals {
  terraform_version = "1.11.3"
  hcloud_version    = "1.50.0"
  aws_version       = "5.82.2"
  routeros_version  = "1.74.0"
  sops_version      = "1.1.1"
  oci_version       = "5.33.0"

  region_vars      = read_terragrunt_config("${find_in_parent_folders("region.hcl")}")
  environment_vars = read_terragrunt_config("${find_in_parent_folders("env.hcl")}")
  provider_vars    = read_terragrunt_config("${find_in_parent_folders("provider.hcl")}")

  company = "magmamoose"
  provider = local.provider_vars.inputs.provider
  region  = local.region_vars.inputs.region
  environment = local.environment_vars.inputs.environment

  # TODO: put the hcloud token inside sops
  hcloud_token      = "${get_env("HCLOUD_TOKEN", "")}"
}

inputs = merge(
  local.region_vars.locals,
  local.environment_vars.locals,
  local.provider_vars.locals,
  {
    company = local.company
    domain = "magmamoose.com"
    sops_path = "${get_repo_root()}/sops"
    ansible_path = "${get_repo_root()}/ansible"
  }
)

remote_state {
  backend = "gcs"
  config = {
    bucket   = "${local.company}-${local.environment}-terraform-state"
    prefix   = "${path_relative_to_include()}"
    project  = "${local.company}-terraform"
    location = "europe-west4"
  }
}

generate "backend" {
  path      = "backend.tf"
  if_exists = "overwrite"
  contents  = <<EOF
terraform {
  backend "gcs" {}
}
EOF
}

generate "provider" {
  path      = "provider.tf"
  if_exists = "overwrite"
  contents  = <<EOF
# Provider configuration generated by Terragrunt
provider "google" {
  project         = "magmamoose-terraform"
  region          = "europe-west4"
  impersonate_service_account = "deployer@magmamoose-terraform.iam.gserviceaccount.com"
}

provider "hcloud" {
  token = "${get_env("HCLOUD_TOKEN", "")}"
}

provider "oci" {
  tenancy_ocid     = "${get_env("OCI_TENANCY_OCID", "")}"
  user_ocid        = "${get_env("OCI_USER_OCID", "")}"
  private_key_path = "${get_env("OCI_PRIVATE_KEY_PATH", "")}"
  fingerprint      = "${get_env("OCI_FINGERPRINT", "")}"
  region           = "${get_env("OCI_REGION", "ap-sydney-1")}"
}
EOF
}
