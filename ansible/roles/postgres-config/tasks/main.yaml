---
- name: Get the PostgreSQL pod name (StatefulSet)
  command: kubectl get pod -n database -l app=postgres -o jsonpath='{.items[0].metadata.name}'
  register: postgres_pod_name
  changed_when: false

- name: Debug pod name
  debug:
    msg: "Using PostgreSQL pod: {{ postgres_pod_name.stdout }}"

- name: Create Nextcloud database
  command: > 
    kubectl exec -n database {{ postgres_pod_name.stdout }} -- 
    psql -U admin -d postgres -c "SELECT 1 FROM pg_database WHERE datname = 'nextcloud';"
  register: db_check
  changed_when: false
  failed_when: false

- name: Create Nextcloud database (if not exists)
  command: > 
    kubectl exec -n database {{ postgres_pod_name.stdout }} -- 
    psql -U admin -d postgres -c "CREATE DATABASE nextcloud;"
  when: "'1 row' not in db_check.stdout"
  register: db_creation
  changed_when: "'CREATE DATABASE' in db_creation.stdout"

- name: Create admin user (if not exists)
  command: > 
    kubectl exec -n database {{ postgres_pod_name.stdout }} -- 
    psql -U admin -d postgres -c "DO $$ BEGIN IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'admin') THEN CREATE USER admin WITH ENCRYPTED PASSWORD 'admin'; END IF; END $$;"
  register: user_creation
  changed_when: "'CREATE ROLE' in user_creation.stdout"

- name: Grant privileges to admin user
  command: > 
    kubectl exec -n database {{ postgres_pod_name.stdout }} -- 
    psql -U admin -d postgres -c "GRANT ALL PRIVILEGES ON DATABASE nextcloud TO admin;"
  register: grant_privs
  changed_when: "'GRANT' in grant_privs.stdout"

- name: Show success message
  debug:
    msg: "Nextcloud database and admin user successfully created!"